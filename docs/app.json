[{"name": "app.py", "content": "\n# Imports\nimport palmerpenguins as pp\nimport plotly.express as px\nimport seaborn as sns\nfrom shiny import reactive, render, req\nfrom shiny.express import input, ui\nfrom shinywidgets import render_plotly, render_widget\n\n# Load PalmerPenguins into a Dataframe\npenguins_df = pp.load_penguins()\n\n# Generate UI\nui.page_opts(title=\"Stevens: Penguin Data\", fillable=True)\n\n# Add a sidebar\nwith ui.sidebar(open=\"open\"):\n    # Add 2nd level header to sidebar\n    ui.h2(\"Sidebar\")\n\n    # Create Dropdown Input for Attributes\n    ui.input_selectize(\"field\", \"Select an Attribute\", ['bill_depth_mm', \n                                                        'flipper_length_mm', \n                                                        'body_mass_g',  \n                                                        'year'])\n\n    # Create Numeric Input\n    #-> Number of Bins for Plotly Histogram\n    ui.input_numeric(\"num_bins_plotly\", \"Select Number of Plotly Bins:\", 20)\n\n    # Create Slider\n    #-> Number of Bins for Seaborn Histogram\n    ui.input_slider(\"num_bins_sns\", \"Select Number of Seaborn Bins\", 10, 100, 20)\n\n    # Create Checkboxes\n    #-> Filter Species\n    ui.input_checkbox_group(\n        \"checked_species\",\n        \"Select Species\",\n        [\"Adelie\", \"Chinstrap\", \"Gentoo\"],\n        selected=\"Adelie\",\n        inline=True\n    )\n    #-> Filter Island\n    ui.input_checkbox_group(\n        'checked_island',\n        'Select Island',\n        ['Biscoe', 'Dream', 'Torgersen'],\n        selected='Biscoe',\n        inline=True\n    )\n    #-> Filter Gender\n    ui.input_checkbox_group(\n        'checked_gender',\n        'Select Gender',\n        ['female', 'male'],\n        selected = 'female',\n        inline=True\n    )\n\n    # Add in Horizontal Rule\n    ui.hr()\n\n    # Add in Hyperlink to GitHub Repository\n    ui.a(\n        \"GitHub Repository\",\n        href=\"https://github.com/Stone-Snevets/cintel-03-reactive\",\n        target=\"_blank\"\n    )\n\n\n# Generate Output Layout having Multiple Columns\nwith ui.layout_columns():\n\n    # Create Data Table\n    @render.data_frame\n    def penguins_dt():\n        return render.DataTable(filtered_data())\n\n    # Create Data Grid\n    @render.data_frame\n    def penguins_dg():\n        return render.DataGrid(filtered_data())\n    \n    # Create Plotly Histogram\n    @render_widget\n    def plotly_histogram():\n        return px.histogram(data_frame = filtered_data(),\n                           x = input.field(),\n                           nbins = input.num_bins_plotly()\n                           )\n\n    # Create Seaborn Histogram\n    @render.plot(alt = 'Seaborn Histogram of Palmers Penguins')\n    def sns_histogram():\n        return sns.histplot(data = filtered_data(),\n                            x = input.field(),\n                            bins = input.num_bins_sns()\n                           )\n\n\n# Generate a Card for Scatterplot\nwith ui.card(full_screen=True):\n    ui.card_header('Plotly Scatterplot: Species')\n    \n    # Create Scatterplot\n    @render_plotly\n    def plotly_scatterplot():\n        return px.scatter(data_frame = filtered_data(),\n                          x = 'year',\n                          y = 'body_mass_g',\n                          color = 'species',\n                          title = 'Penguin Age (yr) vs. Weight (g)',\n                          labels = {'year': 'Year of Birth',\n                                   'body_mass_g': 'Weight (g)'}\n                         )\n\n\n# Add Reactive Calculation\n@reactive.calc\ndef filtered_data():\n    # Make sure at least one species is selected\n    req(input.checked_species())\n    # Make sure at least one island is selected\n    req(input.checked_island())\n    # Make sure at least one gender is selected\n    req(input.checked_gender())\n    \n    # Select Species from Penguins Dataframe\n    select_species = penguins_df['species'].isin(input.checked_species())\n    # Select Island from Penguins Dataframe\n    select_island = penguins_df['island'].isin(input.checked_island())\n    # Select Gender from Penguins Dataframe\n    select_gender = penguins_df['sex'].isin(input.checked_gender())\n\n    # Return Filtered Dataframe\n    return penguins_df[select_species & select_island & select_gender]\n", "type": "text"}]